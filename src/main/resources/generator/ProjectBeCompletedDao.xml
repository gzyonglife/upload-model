<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jinlong.uploadmodel.dao.ProjectBeCompletedDao">
  <resultMap id="BaseResultMap" type="com.jinlong.uploadmodel.entity.data.ProjectBeCompleted">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="record_code" jdbcType="VARCHAR" property="recordCode" />
    <result column="application_no" jdbcType="VARCHAR" property="applicationNo" />
    <result column="construction_unit" jdbcType="INTEGER" property="constructionUnit" />
    <result column="project_address" jdbcType="VARCHAR" property="projectAddress" />
    <result column="record_date" jdbcType="TIMESTAMP" property="recordDate" />
    <result column="filing_authority" jdbcType="VARCHAR" property="filingAuthority" />
  </resultMap>
  <sql id="Base_Column_List">
    id, project_id, record_code, application_no, construction_unit, project_address, 
    record_date, filing_authority
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project_be_completed
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project_be_completed
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.jinlong.uploadmodel.entity.data.ProjectBeCompleted" useGeneratedKeys="true">
    insert into project_be_completed (project_id, record_code, application_no, 
      construction_unit, project_address, record_date, 
      filing_authority)
    values (#{projectId,jdbcType=INTEGER}, #{recordCode,jdbcType=VARCHAR}, #{applicationNo,jdbcType=VARCHAR}, 
      #{constructionUnit,jdbcType=INTEGER}, #{projectAddress,jdbcType=VARCHAR}, #{recordDate,jdbcType=TIMESTAMP}, 
      #{filingAuthority,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.jinlong.uploadmodel.entity.data.ProjectBeCompleted" useGeneratedKeys="true">
    insert into project_be_completed
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="recordCode != null">
        record_code,
      </if>
      <if test="applicationNo != null">
        application_no,
      </if>
      <if test="constructionUnit != null">
        construction_unit,
      </if>
      <if test="projectAddress != null">
        project_address,
      </if>
      <if test="recordDate != null">
        record_date,
      </if>
      <if test="filingAuthority != null">
        filing_authority,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="recordCode != null">
        #{recordCode,jdbcType=VARCHAR},
      </if>
      <if test="applicationNo != null">
        #{applicationNo,jdbcType=VARCHAR},
      </if>
      <if test="constructionUnit != null">
        #{constructionUnit,jdbcType=INTEGER},
      </if>
      <if test="projectAddress != null">
        #{projectAddress,jdbcType=VARCHAR},
      </if>
      <if test="recordDate != null">
        #{recordDate,jdbcType=TIMESTAMP},
      </if>
      <if test="filingAuthority != null">
        #{filingAuthority,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jinlong.uploadmodel.entity.data.ProjectBeCompleted">
    update project_be_completed
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="recordCode != null">
        record_code = #{recordCode,jdbcType=VARCHAR},
      </if>
      <if test="applicationNo != null">
        application_no = #{applicationNo,jdbcType=VARCHAR},
      </if>
      <if test="constructionUnit != null">
        construction_unit = #{constructionUnit,jdbcType=INTEGER},
      </if>
      <if test="projectAddress != null">
        project_address = #{projectAddress,jdbcType=VARCHAR},
      </if>
      <if test="recordDate != null">
        record_date = #{recordDate,jdbcType=TIMESTAMP},
      </if>
      <if test="filingAuthority != null">
        filing_authority = #{filingAuthority,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jinlong.uploadmodel.entity.data.ProjectBeCompleted">
    update project_be_completed
    set project_id = #{projectId,jdbcType=INTEGER},
      record_code = #{recordCode,jdbcType=VARCHAR},
      application_no = #{applicationNo,jdbcType=VARCHAR},
      construction_unit = #{constructionUnit,jdbcType=INTEGER},
      project_address = #{projectAddress,jdbcType=VARCHAR},
      record_date = #{recordDate,jdbcType=TIMESTAMP},
      filing_authority = #{filingAuthority,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>